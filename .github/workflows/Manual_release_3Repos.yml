name: Manual Release for 3 Fixed Repos with Changelog Summary

on:
  workflow_dispatch:
    inputs:
      from_tag_1:
        description: 'From tag for Repo 1'
        required: true
      to_tag_1:
        description: 'To tag for Repo 1'
        required: true
      title_1:
        description: 'Release title for Repo 1 (optional)'
        required: false

      from_tag_2:
        description: 'From tag for Repo 2'
        required: true
      to_tag_2:
        description: 'To tag for Repo 2'
        required: true
      title_2:
        description: 'Release title for Repo 2 (optional)'
        required: false

      from_tag_3:
        description: 'From tag for Repo 3'
        required: true
      to_tag_3:
        description: 'To tag for Repo 3'
        required: true
      title_3:
        description: 'Release title for Repo 3 (optional)'
        required: false

jobs:
  create-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.PERSONAL_TOKEN }}"
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

      - name: Create releases and collect changelogs
        run: |
          mkdir changelogs

          declare -a REPOS=(
            "Geetha-Mallikarjuna/GM-PlayArea"
            "Geetha-Mallikarjuna/GM-PlayArea-2"
            "Geetha-Mallikarjuna/GM-PlayArea-3"
          )

          for i in 1 2 3; do
            REPO=${REPOS[$((i-1))]}
            FROM=$(eval echo "${{ inputs.from_tag_$i }}")
            TO=$(eval echo "${{ inputs.to_tag_$i }}")
            TITLE=$(eval echo "${{ inputs.title_$i }}")

            if [[ -z "$TITLE" ]]; then
              TITLE="Release $TO"
            fi

            echo "📦 Generating release notes for $REPO: $FROM → $TO"

            NOTES=$(gh api repos/$REPO/releases/generate-notes \
              -f tag_name="$TO" \
              -f previous_tag_name="$FROM" \
              -q .body)

            if [[ -z "$NOTES" ]]; then
              echo "⚠️ Could not generate release notes for $REPO"
              continue
            fi

            FILE="changelogs/changelog-${REPO//\//_}.txt"
            echo "🔖 $REPO: $FROM → $TO" > "$FILE"
            echo "" >> "$FILE"
            echo "$NOTES" >> "$FILE"

            echo "$NOTES" > notes.txt

            echo "🚀 Creating release $TO in $REPO"
            gh release create "$TO" \
              --repo "$REPO" \
              --title "$TITLE" \
              --notes-file notes.txt

            echo "✅ Release created: $REPO@$TO"
          done

          echo "📋 Changelogs summary:"
          cat changelogs/* > changelogs/changelogs-summary.txt
          cat changelogs/changelogs-summary.txt
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

      - name: Upload changelogs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelogs
          path: changelogs
