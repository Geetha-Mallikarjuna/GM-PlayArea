name: Check New or Archived Repos

# Triggers:
# - Scheduled daily at midnight UTC
# - Manual trigger from GitHub UI
on:
  schedule:
    - cron: '0 0 * * *'  # every day at 00:00 UTC
  workflow_dispatch:     # manual trigger

jobs:
  check_repos:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repo to access code and state file
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step 3: Install required Python packages
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Step 4: Run the repo checking Python script
      - name: Run repository status check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ORG: your-org-or-username  # <-- Replace with your org or username
        run: |
          python check_repos.py

      # Step 5: Commit and push updated state file if there are changes
      - name: Commit updated repos_state.json if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add repos_state.json

          # Check if there are changes to commit
          if ! git diff --cached --quiet; then
            git commit -m "Update repos_state.json with latest repo info"
            git push
          else
            echo "No changes to repos_state.json; skipping commit."
          fi
