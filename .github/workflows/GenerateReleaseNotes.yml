import argparse
import glob
import re
import requests

def extract_jira_ids_from_file(filename):
    """
    Extracts Jira IDs like ESS-1234 or NMS-1234 from a file.
    """
    jira_pattern = re.compile(r'\b(ESS|NMS)-\d+\b')
    ids = set()
    with open(filename, 'r') as f:
        for line in f:
            matches = jira_pattern.findall(line)
            # re.findall returns only groups if pattern has groups,
            # so better use finditer to get full match:
            for m in re.finditer(r'\b(ESS|NMS)-\d+\b', line):
                ids.add(m.group())
    return ids

def get_jira_title(jira_id):
    """
    Dummy function to get Jira title for a Jira ID.
    You should replace this with actual Jira API call.
    For example, use Jira REST API with authentication.
    """
    # Example placeholder for Jira API URL - replace with your Jira base URL
    jira_base_url = "https://your-jira-instance.atlassian.net"
    api_url = f"{jira_base_url}/rest/api/2/issue/{jira_id}"

    # For demo, returning a placeholder title
    # You would do something like this:
    #
    # response = requests.get(api_url, auth=(JIRA_USER, JIRA_TOKEN))
    # if response.status_code == 200:
    #     data = response.json()
    #     return data['fields']['summary']
    # else:
    #     return "Title not found"

    # Since real Jira credentials are required, let's just mock:
    return f"Title for {jira_id}"

def main():
    parser = argparse.ArgumentParser(description="Extract Jira IDs and fetch titles")
    parser.add_argument('--changelogs', nargs='+', required=True, help='Changelog files to parse')
    parser.add_argument('--output', required=True, help='Output markdown file')

    args = parser.parse_args()

    all_jira_ids = set()

    # Extract Jira IDs from all provided changelog files
    for changelog_file in args.changelogs:
        ids = extract_jira_ids_from_file(changelog_file)
        all_jira_ids.update(ids)

    # Get Jira titles for each ID and write to output markdown
    with open(args.output, 'w') as out:
        for jira_id in sorted(all_jira_ids):
            title = get_jira_title(jira_id)
            out.write(f"- {jira_id}: {title}\n")

if __name__ == "__main__":
    main()
