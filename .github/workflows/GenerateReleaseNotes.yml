name: Generate Release Notes

on:
  workflow_dispatch:
    inputs:
      from_tag_1:
        description: 'From tag for Embedded_utilities'
        required: true
      to_tag_1:
        description: 'To tag for Embedded_utilities'
        required: true

      from_tag_2:
        description: 'From tag for ap-startup'
        required: true
      to_tag_2:
        description: 'To tag for ap-startup'
        required: true

      from_tag_3:
        description: 'From tag for cloud-nms-agent'
        required: true
      to_tag_3:
        description: 'To tag for cloud-nms-agent'
        required: true

      new_tag:
        description: 'New tag to apply at the same commit as To tag'
        required: true

jobs:
  changelog:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git pandoc python3 python3-pip
          pip install pyyaml

      - name: Generate changelogs
        run: |
          echo "📄 Creating changelog directory..."
          mkdir -p changelogs

          REPOS=(
            "Geetha-Mallikarjuna/GM-PlayArea"
            "Geetha-Mallikarjuna/GM-PlayArea-2"
            "Geetha-Mallikarjuna/GM-PlayArea-3"
          )

          FROM_TAGS=(
            "${{ inputs.from_tag_1 }}"
            "${{ inputs.from_tag_2 }}"
            "${{ inputs.from_tag_3 }}"
          )

          TO_TAGS=(
            "${{ inputs.to_tag_1 }}"
            "${{ inputs.to_tag_2 }}"
            "${{ inputs.to_tag_3 }}"
          )

          NEW_TAG="${{ inputs.new_tag }}"

          echo "🚀 Starting changelog generation loop..."
          for i in 0 1 2; do
            REPO="${REPOS[$i]}"
            FROM="${FROM_TAGS[$i]}"
            TO="${TO_TAGS[$i]}"
            REPO_DIR=$(basename "$REPO")

            echo ""
            echo "🔧 Cloning $REPO"
            git clone --quiet "https://github.com/$REPO.git"
            cd "$REPO_DIR"

            echo "🔍 Fetching tags..."
            git fetch --tags

            COMMIT=$(git rev-list -n 1 "$TO" 2>/dev/null)

            if [[ -n "$COMMIT" ]]; then
              echo "🏷️ Tagging $COMMIT with $NEW_TAG (if not already exists)"
              git remote set-url origin https://${GH_TOKEN}@github.com/${REPO}.git
              if ! git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
                git tag "$NEW_TAG" "$COMMIT"
              fi
            fi

            FILE_MD="../changelogs/changelog-${REPO//\//_}.md"
            {
              echo "**🔖 $REPO: $FROM → $TO**"
              echo ""

              CHANGELOG=$(git log "$FROM".."$TO" --pretty=format:"- %s")
              if [[ -n "$CHANGELOG" ]]; then
                echo "$CHANGELOG"
              else
                echo "- There are no changes"
              fi

              echo ""
            } > "$FILE_MD"

            cd ..
            rm -rf "$REPO_DIR"
          done

      - name: Run Python script to extract package info
        run: |
          echo "📦 Extracting package info using Python..."
          python3 parse_required_files.py

      - name: Combine changelogs and package summary
        run: |
          echo "📘 Combining changelogs into summary markdown..."
          {
            echo "# Release Notes"
            echo ""

            for file in changelogs/changelog-*.md; do
              cat "$file"
              echo ""
            done

            echo ""
            cat changelogs/packages-info.txt
          } > changelogs/changelogs-summary.md

      - name: Convert summary to HTML
        run: |
          echo "<style>
          h1 {
            text-align: center;
            margin-top: 1em;
            margin-bottom: 1em;
          }
          body, p, ul, li, div {
            text-align: left !important;
          }
          </style>" > changelogs/header.html

          pandoc changelogs/changelogs-summary.md \
            --standalone \
            --include-in-header changelogs/header.html \
            -f markdown -t html \
            -o changelogs/changelogs-summary.html

          echo "✅ HTML summary created at changelogs/changelogs-summary.html"

      - name: Upload changelogs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelogs
          path: changelogs/changelogs-summary.html
