name: Generate Release Notes

on:
  workflow_dispatch:
    inputs:
      from_tag_1:
        description: 'From tag for Embedded_utilities'
        required: true
      to_tag_1:
        description: 'To tag for Embedded_utilities'
        required: true

      from_tag_2:
        description: 'From tag for ap-startup'
        required: true
      to_tag_2:
        description: 'To tag for ap-startup'
        required: true

      from_tag_3:
        description: 'From tag for cloud-nms-agent'
        required: true
      to_tag_3:
        description: 'To tag for cloud-nms-agent'
        required: true

      new_tag:
        description: 'New tag to apply at the same commit as To tag'
        required: true

jobs:
  changelog:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

    steps:

      # --------------------------------------
      # Step 1: Checkout the current repository
      # --------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # --------------------------------------
      # Step 2: Install system + Python dependencies
      # --------------------------------------
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git pandoc python3 python3-pip
          pip install pyyaml

      # --------------------------------------
      # Step 3: Generate changelogs for all specified repositories
      # --------------------------------------
      - name: Generate changelogs
        run: |
          mkdir -p changelogs

          # Repositories and tags to compare
          REPOS=(
            "Geetha-Mallikarjuna/GM-PlayArea"
            "Geetha-Mallikarjuna/GM-PlayArea-2"
            "Geetha-Mallikarjuna/GM-PlayArea-3"
          )
          FROM_TAGS=(
            "${{ inputs.from_tag_1 }}"
            "${{ inputs.from_tag_2 }}"
            "${{ inputs.from_tag_3 }}"
          )
          TO_TAGS=(
            "${{ inputs.to_tag_1 }}"
            "${{ inputs.to_tag_2 }}"
            "${{ inputs.to_tag_3 }}"
          )
          NEW_TAG="${{ inputs.new_tag }}"

          # Loop through each repo and generate changelog
          for i in 0 1 2; do
            REPO="${REPOS[$i]}"
            FROM="${FROM_TAGS[$i]}"
            TO="${TO_TAGS[$i]}"
            REPO_DIR=$(basename "$REPO")

            # Clone repo and tag if necessary
            git clone --quiet "https://github.com/$REPO.git"
            cd "$REPO_DIR"
            git fetch --tags

            COMMIT=$(git rev-list -n 1 "$TO" 2>/dev/null)
            if [[ -n "$COMMIT" ]]; then
              git remote set-url origin https://${GH_TOKEN}@github.com/${REPO}.git
              if ! git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
                git tag "$NEW_TAG" "$COMMIT"
              fi
            fi

            # Create markdown changelog file
            FILE_MD="../changelogs/changelog-${REPO//\//_}.md"
            {
              echo "**ðŸ”– $REPO: $FROM â†’ $TO**"
              echo ""
              CHANGELOG=$(git log "$FROM".."$TO" --pretty=format:"- %s")
              if [[ -n "$CHANGELOG" ]]; then
                echo "$CHANGELOG"
              else
                echo "- There are no changes"
              fi
              echo ""
            } > "$FILE_MD"

            cd ..
            rm -rf "$REPO_DIR"
          done

      # --------------------------------------
      # Step 4: Extract package info (summary table)
      # --------------------------------------
      - name: Run Python script to extract package info
        run: |
          python3 parse_required_files.py

      # --------------------------------------
      # Step 5: Combine changelogs and package info into one markdown file
      # --------------------------------------
      - name: Combine changelogs and package summary
        run: |
          {
            echo '<div class="title">Release Notes</div>'
            echo ""
            echo "## Change List"
            echo ""
            for file in changelogs/changelog-*.md; do
              cat "$file"
              echo ""
            done
            echo "## Package Summary"
            echo ""
            cat changelogs/packages-info.txt
          } > changelogs/changelogs-summary.md

      # --------------------------------------
      # Step 6: Add custom styling to HTML output
      # --------------------------------------
      - name: Generate custom CSS header
        run: |
          echo '<style>
          body {
            margin: 0;
            padding: 2em;
            font-family: Arial, sans-serif;
            width: 100%;
            max-width: 100%;
            box-sizing: border-box;
          }

          /* Title styling */
          .title {
            text-align: center;
            font-size: 2em;
            font-weight: bold;
            margin: 0.5em auto 1em auto;
          }

          /* Section headers */
          h2 {
            text-align: left;
            font-size: 1.5em;
            color: #333;
            margin-top: 2em;
          }

          /* Table formatting */
          .table-wrapper {
            width: 100%;
            overflow-x: auto;
          }

          table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed;
          }

          th, td {
            border: 1px solid #999;
            padding: 0.5em;
            text-align: left;
            vertical-align: top;
          }

          /* First two columns: no wrap */
          th:nth-child(1),
          td:nth-child(1),
          th:nth-child(2),
          td:nth-child(2) {
            width: 15%;
            white-space: nowrap;
          }

          /* Last column: wrap only when needed */
          th:nth-child(3),
          td:nth-child(3) {
            width: 70%;
            white-space: normal;
            word-wrap: break-word;
            word-break: break-word;
          }

          ul {
            padding-left: 1.5em;
          }

          li {
            margin-bottom: 0.3em;
          }
          </style>' > changelogs/header.html

      # --------------------------------------
      # Step 7: Convert Markdown file to styled HTML
      # --------------------------------------
      - name: Convert markdown to HTML
        run: |
          pandoc changelogs/changelogs-summary.md \
            --standalone \
            --include-in-header=changelogs/header.html \
            -f markdown -t html \
            -o changelogs/changelogs-summary.html

      # --------------------------------------
      # Step 8: Upload HTML changelog as an artifact
      # --------------------------------------
      - name: Upload changelogs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelogs
          path: changelogs/changelogs-summary.html
