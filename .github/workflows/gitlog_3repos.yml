name: Gitlog

on:
  workflow_dispatch:
    inputs:
      from_tag_repo_1:
        description: 'From tag for repo 1'
        required: true
      to_tag_repo_1:
        description: 'To tag for repo 1'
        required: true

      from_tag_repo_2:
        description: 'From tag for repo 2'
        required: true
      to_tag_repo_2:
        description: 'To tag for repo 2'
        required: true

      from_tag_repo_3:
        description: 'From tag for repo 3'
        required: true
      to_tag_repo_3:
        description: 'To tag for repo 3'
        required: true

      new_tag:
        description: 'New tag to apply at the same commit as To tag (e.g., Customer-Release-1.0)'
        required: true

jobs:
  changelog-tag:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}  # PAT with repo access

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git pandoc

      - name: Generate changelogs and push new tag
        run: |
          mkdir changelogs

          # Define fixed repo list
          REPOS=(
            "Geetha-Mallikarjuna/GM-PlayArea"
            "Geetha-Mallikarjuna/GM-PlayArea-2"
            "Geetha-Mallikarjuna/GM-PlayArea-3"
          )

          # Match inputs by index
          FROM_TAGS=(
            "${{ inputs.from_tag_repo_1 }}"
            "${{ inputs.from_tag_repo_2 }}"
            "${{ inputs.from_tag_repo_3 }}"
          )

          TO_TAGS=(
            "${{ inputs.to_tag_repo_1 }}"
            "${{ inputs.to_tag_repo_2 }}"
            "${{ inputs.to_tag_repo_3 }}"
          )

          NEW_TAG="${{ inputs.new_tag }}"

          for i in 0 1 2; do
            REPO="${REPOS[$i]}"
            FROM="${FROM_TAGS[$i]}"
            TO="${TO_TAGS[$i]}"
            REPO_NAME=$(basename "$REPO")

            echo "📦 Processing $REPO from $FROM to $TO"

            git clone --quiet "https://github.com/$REPO.git"
            cd "$REPO_NAME"
            git fetch --tags

            # Generate changelog
            LOG=$(git log "$FROM".."$TO" --pretty=format:"- %s")

            if [[ -z "$LOG" ]]; then
              echo "⚠️ No commits between $FROM and $TO"
              cd ..
              rm -rf "$REPO_NAME"
              continue
            fi

            FILE="../changelogs/changelog-${REPO//\//_}.txt"
            echo "🔖 $REPO: $FROM → $TO" > "$FILE"
            echo "" >> "$FILE"
            echo "$LOG" >> "$FILE"

            # Tag same commit as TO tag
            COMMIT=$(git rev-list -n 1 "$TO")
            echo "🔗 Tagging $COMMIT as $NEW_TAG"

            # Only tag if it doesn't already exist
            if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
              echo "⚠️ Tag $NEW_TAG already exists in $REPO — skipping push"
            else
              git tag "$NEW_TAG" "$COMMIT"
              git push origin "$NEW_TAG"
              echo "✅ Pushed $NEW_TAG to $REPO"
            fi

            cd ..
            rm -rf "$REPO_NAME"
          done

          # Combine all changelogs into one summary
          cat changelogs/*.txt > changelogs/changelogs-summary.txt
          echo "✅ Combined Markdown Changelog:"
          cat changelogs/changelogs-summary.txt

      - name: Convert changelogs to HTML
        run: |
          for FILE in changelogs/*.txt; do
            pandoc "$FILE" -f markdown -t html -o "${FILE%.txt}.html"
          done

      - name: Upload changelog artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelogs
          path: changelogs
