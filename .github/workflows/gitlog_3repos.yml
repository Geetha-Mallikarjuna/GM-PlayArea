name: Gitlog

on:
  workflow_dispatch:
    inputs:
      from_tag_GM_PlayArea:
        description: 'From tag for GM-PlayArea'
        required: true
      to_tag_GM_PlayArea:
        description: 'To tag for GM-PlayArea'
        required: true

      from_tag_GM_PlayArea_2:
        description: 'From tag for GM-PlayArea-2'
        required: true
      to_tag_GM_PlayArea_2:
        description: 'To tag for GM-PlayArea-2'
        required: true

      from_tag_GM_PlayArea_3:
        description: 'From tag for GM-PlayArea-3'
        required: true
      to_tag_GM_PlayArea_3:
        description: 'To tag for GM-PlayArea-3'
        required: true

      new_tag:
        description: 'New tag to apply at the same commit as To tag (e.g., Customer-Release-1.0)'
        required: true

jobs:
  changelog-tag:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}  # PAT with repo access

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git pandoc

      - name: Generate changelogs and tag commits
        run: |
          mkdir changelogs

          REPOS=(
            "Geetha-Mallikarjuna/GM-PlayArea"
            "Geetha-Mallikarjuna/GM-PlayArea-2"
            "Geetha-Mallikarjuna/GM-PlayArea-3"
          )

          FROM_TAGS=(
            "${{ inputs.from_tag_GM_PlayArea }}"
            "${{ inputs.from_tag_GM_PlayArea_2 }}"
            "${{ inputs.from_tag_GM_PlayArea_3 }}"
          )

          TO_TAGS=(
            "${{ inputs.to_tag_GM_PlayArea }}"
            "${{ inputs.to_tag_GM_PlayArea_2 }}"
            "${{ inputs.to_tag_GM_PlayArea_3 }}"
          )

          NEW_TAG="${{ inputs.new_tag }}"

          for i in 0 1 2; do
            REPO="${REPOS[$i]}"
            FROM="${FROM_TAGS[$i]}"
            TO="${TO_TAGS[$i]}"
            REPO_DIR=$(basename "$REPO")

            echo "📦 Processing $REPO: $FROM → $TO"

            git clone --quiet "https://github.com/$REPO.git"
            cd "$REPO_DIR"
            git fetch --tags

            # ✅ Changelog generation
            LOG=$(git log "$FROM".."$TO" --pretty=format:"- %s")
            if [[ -z "$LOG" ]]; then
              echo "⚠️ No commits found for $REPO"
              cd ..
              rm -rf "$REPO_DIR"
              continue
            fi

            FILE="../changelogs/changelog-${REPO//\//_}.txt"
            echo "🔖 $REPO: $FROM → $TO" > "$FILE"
            echo "" >> "$FILE"
            echo "$LOG" >> "$FILE"

            # ✅ Tagging logic
            COMMIT=$(git rev-list -n 1 "$TO")
            echo "🔗 Tagging commit $COMMIT as $NEW_TAG"

            git tag "$NEW_TAG" "$COMMIT"
            git push origin "$NEW_TAG"

            cd ..
            rm -rf "$REPO_DIR"
          done

          # ✅ Combine all changelogs
          cat changelogs/*.txt > changelogs/changelogs-summary.txt
          echo "✅ Combined Changelog:"
          cat changelogs/changelogs-summary.txt

      - name: Convert to HTML
        run: |
          for FILE in changelogs/*.txt; do
            pandoc "$FILE" -f markdown -t html -o "${FILE%.txt}.html"
          done

      - name: Upload changelogs
        uses: actions/upload-artifact@v4
        with:
          name: changelogs
          path: changelogs
